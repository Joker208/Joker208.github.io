[{"title":"你见过最不求上进的人是什么样子？","date":"2017-02-20T14:51:02.000Z","path":"2017/02/20/你见过最不求上进的人是什么样子？/","text":"今天在知乎看到@布衣卿关于这个问题的回答 我想拿过来放在首页，时时惊醒 共勉我见过的最不求上进的人，既不是学霸又不全算学渣。 他们课听的迷迷糊糊，作业做一些抄一些。 想逃课又心存顾忌，行为也不公开对抗规范纪律。 为现状焦虑，又没有毅力践行决心去改变自己。 三分钟热度，时常憎恶自己的不争气，坚持最多的事情就是坚持不下去。 对感情抱有渴望，又疲于用心追寻与经营。 对曾经的珍视点到即止，直到渐渐松手，淡漠又疏离。 尚未拥有百毒不侵的内心，却提前丧失了热泪盈眶的能力。 偶尔闲暇时间想约人一起，更多时候无人可约就一个人且趴且趟窝上一天。 本想在有限的生命里体验很多种生活，却只会把同样的日子机械重复很多年。 刷着知乎想窥见别人的生活寻求激励，关闭客户端还是该干嘛干嘛去。 终日混迹社交网络，脸色蜡黄地对着手机和电脑的冷光屏，可以说上几句话的人却寥寥无几。 不曾经历过真正沧桑，却还失守了最后一点少年意气。 他们以最普通的身份埋没在人群中，却过着最最煎熬的日子。 文章来源： 你见过最不求上进的人是什么样子？ - 回答作者: 布衣卿","tags":[{"name":"鸡汤","slug":"鸡汤","permalink":"https://joker208.github.io/tags/鸡汤/"}]},{"title":"Hashtable实用案例","date":"2017-02-16T08:46:33.000Z","path":"2017/02/16/Hashtable实用案例/","text":"今天在翻看以前的项目的时候发现了项目中对Hashtable的使用 借这个机会巩固一下Hashtable的知识 Hashtable是非泛型的集合，所以在检索和存储值类型时通常会发生装箱与拆箱的操作 当把某个元素添加到 Hashtable 时，将根据键的哈希代码将该元素放入存储桶中，由于是散列算法所以会出现一个哈希函数能够为两个不同的键生成相同的哈希代码，该键的后续查找将使用键的哈希代码只在一个特定存储桶中搜索，这将大大减少为查找一个元素所需的键比较的次数 Hashtable 的加载因子确定元素与Hashtable 可拥有的元素数的最大比率。加载因子越小，平均查找速度越快，但消耗的内存也增加。默认的加载因子 0.72通常提供速度和大小之间的最佳平衡。当创建 Hashtable 时，也可以指定其他加载因子 元素总量/ Hashtable 可拥有的元素数=加载因子 当向 Hashtable 添加元素时，Hashtable 的实际加载因子将增加。当实际加载因子达到指定的加载因子时，Hashtable 中存储桶的数目自动增加到大于当前 Hashtable 存储桶数两倍的最小素数 虽然Hash具有O(1)的数据检索效率，但它空间开销却通常很大，是以空间换取时间。所以Hashtable适用于读取操作频繁，写入操作很少的操作类型 主要记录一下使用的场景以及方法，为以后作参照 根据其查找效率高的特点用作比较去重 1234567891011121314DataSet ds = app.Ds;Hashtable htData = new Hashtable();foreach (DataRow row in ds.Tables[0].Rows)&#123; string title = row[&quot;Title&quot;].ToString(); if (htData.Contains(title)) &#123; row.Delete(); &#125; else &#123; htData.Add(title, &quot;&quot;); &#125;&#125; 文章参考 Hashtable_百度百科 hashtable详细介绍 C#中HashTable的用法","tags":[{"name":"Hashtable","slug":"Hashtable","permalink":"https://joker208.github.io/tags/Hashtable/"}]},{"title":"jQuery实现简单分页","date":"2017-02-16T07:17:54.000Z","path":"2017/02/16/jQuery实现简单分页/","text":"今天做的一个首页下方的列表需要加一个分页功能 不需要特别多功能，只要有页数就行，网上的分页插件功能太多反倒累赘 于是就自己写了一个简单的分页控件 随便练习一下jQuery 贴代码如下 12345678910111213141516171819202122&lt;ul class=&quot;slideNav&quot;&gt; &lt;wp:ChannelList ID=&quot;ChannelList2&quot; ChannelIndex=&quot;友情链接&quot; runat=&quot;Server&quot; Layout=&quot;None&quot; TotalNum=&quot;4&quot;&gt; &lt;span tagType=&quot;Item&quot;&gt; &lt;li class=&quot;Items prz&quot;&gt; &lt;a tagType=&quot;a&quot; class=&quot;Itemain&quot;&gt;集团下属公司&lt;/a&gt; &lt;ul class=&quot;itsPop pra&quot;&gt; &lt;div tagType=&quot;ContentList&quot; Layout=&quot;None&quot;&gt; &lt;span tagType=&quot;Item&quot;&gt; &lt;li&gt;&lt;a tagType=&quot;a&quot; name=&quot;a1&quot;&gt;航天东方红卫星有限公司&lt;/a&gt;&lt;/li&gt; &lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;fanye pra pages&quot; style=&quot;right:10px;bottom:0px&quot;&gt; &lt;a href=&quot;javascript:;&quot; name=&quot;up&quot; class=&quot;up pagesaa ibox&quot;&gt;上一页&lt;/a&gt; &lt;a href=&quot;javascript:;&quot; name=&quot;down&quot; class=&quot;down pagesaa ibox&quot;&gt;下一页&lt;/a&gt; &lt;input class=&quot;nowPage&quot; value=&quot;1&quot; style=&quot;display:none;&quot;/&gt; &lt;input class=&quot;countRecord&quot; value=&quot;0&quot; style=&quot;display:none;&quot;/&gt; &lt;/div&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/span&gt; &lt;/wp:ChannelList&gt;&lt;/ul&gt; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;script type=&quot;text/javascript&quot;&gt; $(&quot;.itsPop li&quot;).hide(); $(&quot;.itsPop&quot;).each(function()&#123; $(this).find(&quot;li:lt(4)&quot;).show(); &#125;); //$(&quot;.itsPop li:lt(4)&quot;).show(); $(&quot;.countRecord&quot;).each(function()&#123; $(this).val($(this).parents(&quot;.itsPop&quot;).find(&quot;li&quot;).length); if ($(this).val() &lt; 5) &#123; $(this).siblings(&quot;a&quot;).hide(); &#125; &#125;) $(&quot;.fanye a&quot;).each(function()&#123; if ($(this).siblings(&quot;.nowPage&quot;).val() == 1) &#123; $(this).siblings(&quot;.up&quot;).attr(&quot;style&quot;, &quot;visibility:hidden;&quot;); &#125; &#125;) $(&quot;.fanye a&quot;).click(function () &#123; console.log(&quot;click success&quot;); var nowPage = $(this).siblings(&quot;.nowPage&quot;).val();//当前页 var countRecord= $(this).siblings(&quot;.countRecord&quot;).val();//总记录数 var countPage = Math.ceil(countRecord / 4); //console.log(&quot;nowPage=&quot; + nowPage + &quot;countRecord&quot; + countRecord + &quot;countPage&quot; + countPage); var classValue = $(this).attr(&quot;name&quot;); if (&quot;up&quot; == classValue) &#123; if (nowPage &gt; 1) &#123; nowPage--; &#125; &#125; else if (&quot;down&quot; == classValue) &#123; if (nowPage &lt; countPage) &#123; nowPage++; &#125; &#125; startIndex = (nowPage - 1) * 4 + 1;//获取每页开始记录数 endIndex = nowPage * 4;//获取每页结束记录数 $(this).parents(&quot;.fanye&quot;).siblings(&quot;li:gt(&quot; + (startIndex - 1) + &quot;)&quot;).show(); $(this).parents(&quot;.fanye&quot;).siblings(&quot;li:lt(&quot; + (endIndex - 1) + &quot;)&quot;).show(); //$(&quot;.itsPop li:gt(&quot; + (startIndex - 1) + &quot;)&quot;).show(); //$(&quot;.itsPop li:lt(&quot; + (endIndex - 1) + &quot;)&quot;).show(); //隐藏操作 //设置隐藏超出页数之外的数据 $(this).parents(&quot;.fanye&quot;).siblings(&quot;li:lt(&quot; + (startIndex - 1) + &quot;)&quot;).css(&quot;display&quot;, &quot;none&quot;); $(this).parents(&quot;.fanye&quot;).siblings(&quot;li:gt(&quot; + (endIndex - 1) + &quot;)&quot;).css(&quot;display&quot;, &quot;none&quot;); if (nowPage == 1) &#123; $(this).parent().find(&quot;.up&quot;).attr(&quot;style&quot;, &quot;visibility:hidden;&quot;); &#125; else &#123; $(this).parent().find(&quot;.up&quot;).attr(&quot;style&quot;, &quot;visibility:visible;&quot;); &#125; if (nowPage == countPage) &#123; $(this).parent().find(&quot;.down&quot;).attr(&quot;style&quot;, &quot;visibility:hidden;&quot;); &#125; else &#123; $(this).parent().find(&quot;.down&quot;).attr(&quot;style&quot;, &quot;visibility:visible;&quot;); &#125; $(this).siblings(&quot;.nowPage&quot;).val(nowPage); &#125;)&lt;/script&gt;","tags":[{"name":"前端","slug":"前端","permalink":"https://joker208.github.io/tags/前端/"},{"name":"jQuery","slug":"jQuery","permalink":"https://joker208.github.io/tags/jQuery/"},{"name":"分页","slug":"分页","permalink":"https://joker208.github.io/tags/分页/"}]},{"title":".NET发送邮件","date":"2017-02-15T09:36:00.000Z","path":"2017/02/15/dot NET发送邮件/","text":"分享一个.NET后台发送邮件的方法 Demo如下 这个Demo的使用情景是 网站用户修改密码时的绑定邮箱验证 123456789101112131415161718192021222324252627/// &lt;summary&gt;/// 发送邮件/// &lt;/summary&gt;/// &lt;param name=&quot;Email&quot;&gt;用户邮箱地址&lt;/param&gt;/// &lt;param name=&quot;RanDom&quot;&gt;随机验证码&lt;/param&gt;/// &lt;param name=&quot;Name&quot;&gt;用户名&lt;/param&gt;public static void SendEmail(string Email, string RanDom, string Name)&#123; MailMessage mail = new MailMessage(); mail.To.Add(new MailAddress(Email)); mail.Subject = &quot;邮件标题&quot;; mail.SubjectEncoding = System.Text.Encoding.UTF8; mail.Body = &quot;尊敬的用户:&quot; + Name + &quot;。修改密码给你发的验证码是：&quot; + RanDom + &quot;.该验证码有效时间为30分钟，请注意自己的帐号安全，不要外泄密码！！&quot;; mail.BodyEncoding = System.Text.Encoding.UTF8; mail.IsBodyHtml = true; mail.Priority = MailPriority.High; SmtpClient smtpclient = new SmtpClient(); smtpclient.UseDefaultCredentials = true; string EmailClass = Email.Substring(Email.LastIndexOf(&apos;@&apos;)); smtpclient.Host = &quot;smtp&quot; + EmailClass; mail.From = new MailAddress(&quot;发送邮件的邮箱地址&quot;); smtpclient.Credentials = new System.Net.NetworkCredential(&quot;发送邮件的邮箱地址&quot;, &quot;密码&quot;); smtpclient.Send(mail);&#125;","tags":[{"name":".NET","slug":"NET","permalink":"https://joker208.github.io/tags/NET/"},{"name":"邮件","slug":"邮件","permalink":"https://joker208.github.io/tags/邮件/"}]},{"title":"CarouFredSel插件实现图片轮播","date":"2017-02-15T08:17:48.000Z","path":"2017/02/15/CarouFredSel插件实现鼠标移入停止/","text":"公司做北大的一个网站 里面有一个轮播效果 使用了CarouFredSel插件来实现 借这个机会好好来研究一下这个插件 先附上Demo 1234567891011121314151617&lt;ul id=&quot;time_ul&quot;&gt; &lt;li class=&quot;time_li&quot; style=&quot;height:398px;width:400px;&quot;&gt; &lt;div class=&quot;zhanlan_a&quot;&gt; &lt;img class=&quot;zh_pic&quot; src=&quot;../upload/images/&lt;%=pic %&gt;&quot;&gt; &lt;/div&gt; &lt;/li&gt; &lt;li class=&quot;time_li&quot; style=&quot;height:398px;width:400px;&quot;&gt; &lt;div class=&quot;zhanlan_a&quot;&gt; &lt;img class=&quot;zh_pic&quot; src=&quot;../upload/images/&lt;%=pic %&gt;&quot;&gt; &lt;/div&gt; &lt;/li&gt; &lt;li class=&quot;time_li&quot; style=&quot;height:398px;width:400px;&quot;&gt; &lt;div class=&quot;zhanlan_a&quot;&gt; &lt;img class=&quot;zh_pic&quot; src=&quot;../upload/images/&lt;%=pic %&gt;&quot;&gt; &lt;/div&gt; &lt;/li&gt;&lt;/ul&gt; 1234567891011121314151617&lt;script type=&quot;text/javascript&quot;&gt;$(&apos;#time_ul&apos;).carouFredSel(&#123; auto:true, direction: &apos;up&apos;, items: &#123; visible: 1, height: 398 &#125;, scroll: &#123; items:1, duration: 2000, timeoutDuration: 2500, pauseOnHover: true &#125;, pagination: &apos;#paginations&apos; &#125;);&lt;/script&gt; CarouFredSel的一些重要参数说明circular true 循环模式，true为无限循环，false为单轮循环。 infinite true 是否启用循环，默认起用。当circular设置为false的时候，再把infinite设置为false，就可以关闭循环 direction “left” 滚动方向，可选值：”right”, “left”, “up” , “down” width null 内容的宽度，如果为null，宽度自动计算 height null 内容的高度，如果为null，高度自动计算 padding 0 内容区域的padding items 5 显示个数。默认显示5个 scroll 默认等于显示的个数 一次滚动个数 auto true 是否自动播放。设置成false，不自动播放 prev null 指定某一元素控制内容向前 next null 指定某一元素控制内容向后 (“▔□▔)/(“▔□▔)/(“▔□▔)/ 另外，还学了一招–去除轮播效果 $(&apos;#time_ul&apos;).trigger(&apos;destroy&apos;);","tags":[{"name":"前端","slug":"前端","permalink":"https://joker208.github.io/tags/前端/"},{"name":"CarouFredSel","slug":"CarouFredSel","permalink":"https://joker208.github.io/tags/CarouFredSel/"}]},{"title":"图片外加a标签导致图片无法显示完整","date":"2017-02-15T07:19:05.000Z","path":"2017/02/15/前端小技巧/","text":"在公司主要做网站后端开发 不可避免的会用到前端的东西 正巧公司制作里有位大腿 没事多抱抱（@￣︶￣@） 最近就遇到问题了 问题描述： 当给图片添加链接的时候，我会用一个a标签来包裹img标签 但是这样会导致图片无法完全显示 &lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;&quot;&gt;&lt;/a&gt; 解决方法： 123&lt;a style=&quot;display:block;width:100%;height:100%;&quot; href=&quot;#&quot;&gt;&lt;img src=&quot;&quot;&gt;&lt;/a&gt; 开发这一行注重经验，多积累，多整理，争取早日变成大腿","tags":[{"name":"前端","slug":"前端","permalink":"https://joker208.github.io/tags/前端/"},{"name":"css","slug":"css","permalink":"https://joker208.github.io/tags/css/"}]},{"title":"Python学习笔记（一）","date":"2016-12-16T07:08:21.000Z","path":"2016/12/16/Python学习笔记（一）/","text":"数据结构 list tuple dict set list 定义 用中括号定义 可以是空的 可以存在不同数据类型 访问 index索引值（注意不要越界） 索引值可为负数（倒数） 添加元素 append()添加到尾部 insert(value,index)添加到指定位置 删除元素 pop()删除尾部元素 pop(index) 可以替换元素 L[index]=value Tuple 定义 用小括号定义 可以是空 可以存在不同数据类型 不能重新赋值替换 创建单元素时要注意t=(1,)防止小括号单值歧义 tuple的不可变指的是指针指向位置的不可变，当包含list时，list中的元素可以改变 Dict 定义 用花括号定义 格式为Key-Value键值对，类似于HashMap 添加 可以直接通过键值对方式添加dict中的元素 访问 Key键(不可重复)访问( 字符串、整型、浮点型和元组tuple都可以作为dict的key ) 判断是否存在用 in 特点 1.查找速度快，以空间换时间 2.无序 合并 1234567891011121314&gt;&gt;&gt; d1 = &#123;&apos;mike&apos;:12, &apos;jack&apos;:19&#125;&gt;&gt;&gt; d2 = &#123;&apos;jone&apos;:22, &apos;ivy&apos;:17&#125;&gt;&gt;&gt; dMerge = dict(d1.items() + d2.items())&gt;&gt;&gt; print dMerge&#123;&apos;mike&apos;: 12, &apos;jack&apos;: 19, &apos;jone&apos;: 22, &apos;ivy&apos;: 17&#125;&gt;&gt;&gt; dMerge2 = dict(d1, **d2)&gt;&gt;&gt; print dMerge2&#123;&apos;mike&apos;: 12, &apos;jack&apos;: 19, &apos;jone&apos;: 22, &apos;ivy&apos;: 17&#125;&gt;&gt;&gt; dMerge3 = dict(d1)&gt;&gt;&gt; dMerge3.update(d2)&gt;&gt;&gt; print dMerge&#123;&apos;mike&apos;: 12, &apos;jack&apos;: 19, &apos;jone&apos;: 22, &apos;ivy&apos;: 17&#125; set 定义 set([]) 没有value值的dict 元素无序且不可重复 访问 只能查看某个元素是否在这个集合里面(in) 大小写敏感 操作 add() remove() 多用于判断一个元素是否在一些不同的条件内符合","tags":[{"name":"Python","slug":"Python","permalink":"https://joker208.github.io/tags/Python/"}]},{"title":"js天气插件","date":"2016-10-28T08:50:35.000Z","path":"2016/10/28/js天气插件/","text":"曾子曰：“吾日三省吾身——为人谋而不忠乎？与朋友交而不信乎？传不习乎？” 自从博客创建起来以后就没有再更新过 想来也是十分惭愧 工作这么长时间积攒了不少值得记录的东西 心里也一直想着要坚持更新才行 看来还是是懒 选择来到大城市就是为了能一直鞭策自己不断进步 但是一稳定下来就不想努力了 以后还是要日省吾身，保持一颗拼搏的心。 进入正题 前段时间一个网站项目里要加入天气插件 由于是定制化的页面 网上现有的插件都没法直接用 于是找了一个ajax直接获取天气数据的方法 前端代码 12&lt;div id=&quot;location&quot;&gt;&lt;/div&gt;&lt;div id=&quot;weather&quot;&gt;&lt;/div&gt; js代码 12345678910111213141516var cityUrl = &apos;http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js&apos;;//获取ip所在地区$.getScript(cityUrl, function (script, textStatus, jqXHR) &#123;var citytq = remote_ip_info.city;// 获取城市var url = &quot;http://php.weather.sina.com.cn/iframe/index/w_cl.php?code=js&amp;city=&quot; + citytq + &quot;&amp;day=0&amp;dfc=3&quot;;//sina提供的天气接口$.ajax(&#123; url: url, dataType: &quot;script&quot;, scriptCharset: &quot;gbk&quot;, success: function (data) &#123; var _w = window.SWther.w[citytq][0]; var tq = _w.s1 + &quot; &quot; + _w.t1 + &quot;℃～&quot; + _w.t2 + &quot;℃ &quot;; $(&apos;#location&apos;).html(citytq + &apos;地区：&apos;); $(&apos;#weather&apos;).html(tq); &#125; &#125;); &#125;); 说明 在上段代码中的url里，将变量citytq赋值为北京：var url = &quot;http://php.weather.sina.com.cn/iframe/index/w_cl.php?code=js&amp;city=北京&amp;day=0&amp;dfc=3&quot;; 可获得如下数据：(function(){var w=[];w[&#39;北京&#39;]=[{s1:&#39;晴&#39;,s2:&#39;晴&#39;,f1:&#39;qing&#39;,f2:&#39;qing&#39;,t1:&#39;13&#39;,t2:&#39;2&#39;,p1:&#39;3-4&#39;,p2:&#39;≤3&#39;,d1:&#39;北风&#39;,d2:&#39;无持续风向&#39;}];var add={now:&#39;2016-10-28 20:21:07&#39;,time:&#39;1477657267&#39;,update:&#39;北京时间10月28日07:58更新&#39;,error:&#39;0&#39;,total:&#39;1&#39;};window.SWther={w:w,add:add};})();//0","tags":[{"name":"js","slug":"js","permalink":"https://joker208.github.io/tags/js/"},{"name":"天气插件","slug":"天气插件","permalink":"https://joker208.github.io/tags/天气插件/"}]},{"title":"绝命毒师影评","date":"2016-08-15T06:25:08.000Z","path":"2016/08/15/绝命毒师影评/","text":"今天终于把绝命毒师看完了 从第一季到第五季整个影片基调压抑的让人透不过气 作为一个中年化学教师 老白 兢兢业业，唯唯诺诺，一事无成，身患绝症 为了家人，为了儿子，走上制毒之路，险象环生 却被周围人唾弃 他一直在备受煎熬 当影片最后，当baby blue歌声响起 当老白倒下，顿时有一种解脱的轻松 甚至不由自主的热泪盈眶 碌碌无为五十年 在生命的最后时间 能够发现自己最热爱的东西 能够成就一番事业 并且依然深爱着自己的家人 最终死在自己心爱的实验室里 就像老白说的那样”I was alive” 值了","tags":[{"name":"影评","slug":"影评","permalink":"https://joker208.github.io/tags/影评/"}]},{"title":"网页一键分享功能","date":"2016-08-02T07:44:17.000Z","path":"2016/08/02/网页一键分享功能/","text":"公司用的一般都是现成的分享插件 推荐给大家JiaThis 现有插件的缺点很明显，样式已经固定，不能满足定制化网站的需求 下面用js来实现网页的一键分享功能 123&lt;a href=&quot;javascript:void(0)&quot; onClick=&quot;Share.sinaWeiBo(&apos;测试测试测试分享到微博,地址&apos;,&apos;http://www.baidu.com&apos;,&apos;http://09.imgmini.eastday.com/mobile/20160712/20160712191443_b7a55523e3bfc750a28992a67b664332_1.jpeg&apos;);&quot; title=&quot;分享到新浪微博&quot;&gt;一键转发新浪微博&lt;/a&gt;&lt;a href=&quot;javascript:void(0)&quot; onClick=&quot;Share.qqWeiBo(&apos;测试测试测试分享到腾讯微博&apos;,&apos;http://www.baidu.com&apos;,&apos;http://www.yn.xinhuanet.com/ent/2006-11/10/xin_351103101047078339115.jpg&apos;);&quot; class=&quot;tmblog q&quot; title=&quot;分享到腾讯微博&quot;&gt;一键转发腾讯微博&lt;/a&gt;&lt;a href=&quot;javascript:void(0)&quot; onClick=&quot;Share.qqZone(&apos;测试测试测试分享到QQ空间,地址&apos;,&apos;http://www.baidu.com&apos;,&apos;http://www.yn.xinhuanet.com/ent/2006-11/10/xin_351103101047078339115.jpg&apos;);&quot; class=&quot;tmblog q&quot; title=&quot;分享到腾讯微博&quot;&gt;一键转发QQ空间&lt;/a&gt; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;script type=&quot;text/javascript&quot;&gt; /**分享到新浪微博，腾讯微博，QQ空间，微信朋友圈 */var Share =&#123; //新浪微博 sinaWeiBo:function(title,url,pic)&#123; var _w = 72 , _h = 16; var param = &#123; url:url, type:&apos;3&apos;, count:&apos;1&apos;, /**是否显示分享数，1显示(可选)*/ appkey:&apos;&apos;, /**您申请的应用appkey,显示分享来源(可选)*/ title:title, /**分享的文字内容(可选，默认为所在页面的title)*/ pic:pic, /**分享图片的路径(可选)*/ ralateUid:&apos;&apos;, /**关联用户的UID，分享微博会@该用户(可选)*/ rnd:new Date().valueOf() &#125; var temp = []; for( var p in param )&#123; temp.push(p + &apos;=&apos; + encodeURIComponent( param[p] || &apos;&apos; ) ) &#125; var target_url = &quot;http://service.weibo.com/share/share.php?&quot;+temp.join(&apos;&amp;&apos;); window.open(target_url,&apos;sinaweibo&apos;,&apos;height=430, width=400&apos;); &#125;, //qq微博 qqWeiBo:function(title,url,pic)&#123; var _t = encodeURI(title); var _url = encodeURIComponent(url); var _appkey = encodeURI(&apos;appkey&apos;);//你从腾讯获得的appkey var _pic = encodeURI(pic);//（例如：var _pic=&apos;图片url1|图片url2|图片url3....） var _site = &apos;http://rt.xoyo.com&apos;;//你的网站地址 var _u = &apos;http://v.t.qq.com/share/share.php?url=&apos;+_url+&apos;&amp;appkey=&apos;+_appkey+&apos;&amp;site=&apos;+_site+&apos;&amp;pic=&apos;+_pic+&apos;&amp;title=&apos;+_t; window.open( _u,&apos;&apos;, &apos;width=700, height=680, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, location=yes, resizable=no, status=no&apos; ); &#125;, //qq空间 qqZone:function(title,url,pic)&#123; var p = &#123; url:url, showcount:&apos;0&apos;,/*是否显示分享总数,显示：&apos;1&apos;，不显示：&apos;0&apos; */ desc:&apos;&apos;,/*默认分享理由(可选)*/ summary:&apos;&apos;,/*分享摘要(可选)*/ title:title,/*分享标题(可选)*/ site:&apos;&apos;,/*分享来源 如：腾讯网(可选)*/ pics:pic, /*分享图片的路径(可选)*/ style:&apos;203&apos;, width:22, height:22 &#125;; var s = []; for(var i in p)&#123; s.push(i + &apos;=&apos; + encodeURIComponent(p[i]||&apos;&apos;)); &#125; var shareURL = &apos;http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?&apos;+s.join(&apos;&amp;&apos;); window.open(shareURL,&apos;newwindow&apos;,&apos;height=400,width=400,top=100,left=100&apos;); &#125;,&#125;;&lt;/script&gt; 另微信没有专门的分享接口 一般的解决方案是把要分享的页面做成二维码 通过微信扫一扫打开 在微信右上角有分享的功能","tags":[{"name":"js","slug":"js","permalink":"https://joker208.github.io/tags/js/"},{"name":"一键分享","slug":"一键分享","permalink":"https://joker208.github.io/tags/一键分享/"}]},{"title":"hexo常用命令","date":"2016-06-10T09:07:55.000Z","path":"2016/06/10/hexo常用命令/","text":"安装bashnpm install hexo -g #安装npm update hexo -g #升级hexo init #初始化 简写hexo n “我的博客” == hexo new “我的博客” #新建文章hexo p == hexo publishhexo g == hexo generate#生成hexo s == hexo server #启动服务预览hexo d == hexo deploy#部署 服务器hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IP hexo clean #清除缓存 网页正常情况下可以忽略此条命令hexo g #生成静态网页hexo d #开始部署 监视文件变动hexo generate #使用 Hexo 生成静态文件快速而且简单hexo generate –watch #监视文件变动 完成后部署两个命令的作用是相同的hexo generate –deployhexo deploy –generate hexo deploy -ghexo server -g 草稿hexo publish [layout] 模版hexo new “postName” #新建文章hexo new page “pageName” #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #将.deploy目录部署到GitHub hexo new [layout] hexo new photo “My Gallery”hexo new “Hello World” –lang tw 模版（Scaffold）hexo new photo “My Gallery” 设置文章摘要以上是文章摘要 以下是余下全文 写作hexo new page hexo new post 推送到服务器上hexo n #写文章hexo g #生成hexo d #部署 #可与hexo g合并为 hexo d -g 安装RSS插件npm install hexo-generator-feed –save 开启RSS功能编辑hexo/_config.yml，添加如下代码： rss: /atom.xml #rss地址 默认即可","tags":[{"name":"hexo","slug":"hexo","permalink":"https://joker208.github.io/tags/hexo/"}]},{"title":"HEXO+githubpage搭建博客","date":"2016-06-07T06:26:54.000Z","path":"2016/06/07/HEXO-githubpage搭建博客/","text":"一、前言一千个人眼中有一千个哈姆雷特虽然网上已经不乏相关的教程，我还是把我的搭建步骤和大家分享，我的电脑是windows系统，有问题的话可以留言，我们一起来讨论哈~ 二、准备工作搭建博客首先要了解一下几个基本概念（其实我也没有看完） Git GitHub Pages Hexo Markdown 然后需要下载几个安装包，有些安装包需要翻墙不好下载，直接用我的百度云分享 Node.js（node-v6.9.5-x64.msi） Git（Git-2.11.1-64-bit.exe） 最后，记得在Github上注册个帐号ok，准备工作就做好了 三、搭建博客第一步，把上面提到的两个安装包先给安装了 第二步，将你的Github帐号与你的电脑绑定 先检查你的电脑里有没有SSH keys在电脑的桌面上点鼠标右键，选择Git Bash Here，就会出来黑框框，键入下面代码1$ ls -al ~/.ssh 默认情况下，public keys的文件名是以下的格式之一：id_dsa.pub、id_ecdsa.pub、id_ed25519.pub、id_rsa.pub如果没有SSH key，则生成新的SSH key1$ ssh-keygen -t rsa -C \"your_email@example.com\" 这里的邮箱是你申请Github帐号时的邮箱成功后会在C:\\Users\\用户名\\ .ssh路径下生成两个文件id_rsa 以及id_rsa.pub之后在github添加SSH Key,在任意界面右上角，点击你的头像，选择Settings-&gt; SSH keys-&gt;New SSH key将id_rsa.pub里面的内容全部复制到Key框里面 ok，绑定成功~ 第三步，搭建本地博客在本地新建一个文件夹，比如Blog，文件右键，选择Git Bash Here输入指令安装hexo1$ npm install -g hexo 稍等片刻。。。安装完成后，输入以下指令1$ hexo init 该命令会在目标文件夹内建立网站所需要的所有文件接下来是安装依赖包1$ npm install 部署形成文件1$ hexo generate 再接下来运行server 跑起hexo服务1$ hexo server 这样博客在本地已经搭建好了，我们可以打开浏览器，输入http://localhost:4000/便可看到默认的博客了 鼓掌（/≧▽≦/），等等，其实还有第四步 第四步，博客上线 登录Github，点击”New repository”，新建一个版本库输入仓库名：你的Github名称.github.io然后点击Create repository这里的Repository name一定要用的github的用户名，不然显示不出来，因为githubPage只能你的用户名接下来，点击右边的“Setting”菜单进入设置,点击”Launch automatic page generator”进入之后点击底部的”Continue to layouts”之后选择一个随意模版，点击”Publish page”,发布github默认生成的一个静态站点ok，线上的工作完成，接下来修改一下本地文件 打开本地博客根目录下的配置文件_config.yml编辑最后面的deploy属性，加入代码123type: gitrepository: git@github.com:username/username.github.io.gitbranch: master 这里列举配置文件_config.yml的部分关键配置，可自行修改123456789101112131415161718192021222324252627# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: #网站的标题subtitle: #副标题description: #描述author: #作者信息avatar: #头像，图片位置在相应主题目录下的imageslanguage: zh-Hans #中文简体email: timezone:# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: #配置主题stylus: compress: true #自适应布局# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git #部署环境，基于hexo+githubpage,所以这里使用git。注意：不同版本的hexo，type有可能不同，3.x以后应使用git,具体参看官方文档 repository: git@github.com:username/username.github.io.git #git仓库地址，替换成你的username即可，其他保持不变，后面会提到如何创建git仓库 branch: master 安装hexo-deployer-git插件1npm install hexo-deployer-git --save 部署你本地的主题到github上123hexo cleanhexo generator #简写 hexo ghexo deploy #简写 hexo d 最后，就可以在线上查看搭建好的博客了https://username.github.io 这次，博客真的就搭建完成了，干杯!~( ゜▽゜)つロ 对了，附送我用的主题以及知乎上的主题收集 hexo-theme-yilia 有哪些好看的 Hexo 主题？-知乎 文章参考 http://crazymilk.github.io/ http://blog.csdn.net/wx_jin/article/details/51027783 补充：HEXO里面一定要注意空格，配置文件_config.yml中的属性一定要在冒号后面空一格，不然会报错。","tags":[{"name":"github","slug":"github","permalink":"https://joker208.github.io/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"https://joker208.github.io/tags/hexo/"}]}]